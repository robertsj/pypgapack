#!/bin/bash

# Building pypgapack (temporary)
# ==============================
# 
# 0) Build PGAPack with the patches in ../patches.  The major difference is 
#    a slight change to allow use with C++.  The Makefile template also is
#    set to produce shared and static libraries.
#
# 1) Modify the paths and variables below to suit your needs. 
# 
# 2) The source as distributed is set for serial.  To use in parallel, do
#    the following:
#    
#    a) Uncomment PARALLEL
#    b) Set CXX to the appropriate compiler (e.g. mpic++)
#    c) Delete or move the dummy mpi.h included with PGAPack to avoid
#       redefinitions.  There's probably a better approach.
#    d) This assumes PGAPack was built in parallel; if not, do so.  Refer to
#       the PGAPack documentation.  You need an MPI-enabled compiler.
#    e) Get mpi4py (e.g. easy_install mpi4py). You need an MPI-enabled compiler.
#

# Your SWIG executable.
SWIG=/home/robertsj/opt/swig/swig-2.0.4/bin/swig

# PGAPack stuff.
PGADIR=/home/robertsj/opt/pgapack/pgapack-1.1.1
PGAINC=${PGADIR}/include/
PGALIB=${PGADIR}/lib/serial/libpgas.so

# Parallel switch.
#PARALLEL="-DPARALLEL"

# Compiler.
CXX=g++

# Build.
${SWIG} -c++ -python ${PARALLEL} pypgapack.i 
${CXX} -c -w -g -fPIC pypgapack_wrap.cxx -I/usr/include/python2.7 -I${PGAINC}
${CXX} -g -shared pypgapack_wrap.o -fPIC -lpython2.7 -Wl,-no-undefined -Wl,--warn-once ${PGALIB} -o _pypgapack.so

